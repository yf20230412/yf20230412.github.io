name: Deploy VitePress to GitHub Pages

on:
  push:
    paths:
      - 'docs/docs/**'
  workflow_dispatch:

env:
  TZ: Asia/Shanghai

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. 设置 PNPM
      - name: Setup PNPM
        uses: pnpm/action-setup@v3
        with:
          version: 9

      # 3. 设置 Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      # 系统级诊断
      - name: System diagnostics
        run: |
          echo "=== 用户 ==="
          whoami
          echo "=== 权限 ==="
          ls -la docs/ docs/docs/ docs/docs/.vitepress/
      
      # 使用更干净的容器环境
      - name: Setup environment
        uses: docker://node:20-bullseye
        with:
          args: bash -c "apt-get update && apt-get install -y tree"
      
      # 构建步骤
      - name: Build VitePress
        working-directory: docs/docs
        run: |
          echo "=== PNPM 版本 ==="
          pnpm -v
          echo "=== Node 版本 ==="
          node -v
          
          # 强制清理并重建
          rm -rf docs/docs/.vitepress/cache .vitepress/dist node_modules/.vite
          
          # 带详细日志的构建
          pnpm install --verbose
          pnpm run build 2>&1 | tee build.log
          
          echo "=== 构建日志 ==="
          cat build.log
          echo "=== 输出目录 ==="
          tree -a docs/docs/.vitepress/dist || find . -name dist -type d
          
          # 硬性验证
          [ -f "docs/docs/.vitepress/dist/index.html" ] || exit 1
      
      # 部署准备
      - name: Prepare deployment
        run: |
          mkdir -p docs/bk
          rm -rf docs/bk/*
          cp -R docs/docs/.vitepress/dist/* docs/bk/
          
          echo "=== 部署包验证 ==="
          [ -f "docs/bk/index.html" ] || exit 1
          du -sh docs/bk/
      
      - uses: actions/upload-pages-artifact@v3
        with:
          path: docs/bk

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/deploy-pages@v4