import{_ as a,c as t,a4 as l,x as e,M as h,o as p}from"./chunks/framework.C8NEeyPT.js";const u=JSON.parse('{"title":"github如何上传和下载大文件","description":"","frontmatter":{},"headers":[],"relativePath":"blog/github如何上传和下载大文件.md","filePath":"blog/github如何上传和下载大文件.md","lastUpdated":null}'),n={name:"blog/github如何上传和下载大文件.md"};function d(o,i,k,g,c,r){const s=h("LastUpdated");return p(),t("div",null,[i[0]||(i[0]=l(`<h1 id="github如何上传和下载大文件" tabindex="-1">github如何上传和下载大文件 <a class="header-anchor" href="#github如何上传和下载大文件" aria-label="Permalink to &quot;github如何上传和下载大文件&quot;">​</a></h1><p>github当文件大小大于50M就会提示用户，当文件大于100M会限制上传。</p><h2 id="一、git中配置和使用git-lfs步骤" tabindex="-1">一、Git中配置和使用Git LFS步骤: <a class="header-anchor" href="#一、git中配置和使用git-lfs步骤" aria-label="Permalink to &quot;一、Git中配置和使用Git LFS步骤:&quot;">​</a></h2><ol><li><p><strong><code>git lfs install</code></strong>：</p><ul><li>这个命令用于初始化Git LFS。它会配置Git以便能够使用LFS功能，包括设置钩子和配置文件，以便管理大文件。</li></ul></li><li><p><strong><code>git lfs track &quot;*.your_large_file_extension&quot;</code></strong>：</p><ul><li>这个命令指定要使用LFS管理的文件类型。<code>*.your_large_file_extension</code>是一个模式，您需要将其替换为实际的文件扩展名（例如，<code>*.psd</code>、<code>*.zip</code>等）。这意味着所有符合该模式的文件将被Git LFS跟踪，而不是存储在Git的常规对象存储中。</li></ul></li><li><p><strong><code>git add .gitattributes</code></strong>：</p><ul><li>Git会在根目录下创建一个名为<code>.gitattributes</code>的文件，里面包含了哪些文件类型应该使用LFS进行管理。这个命令将该文件添加到暂存区，以便在下次提交时包含它。</li></ul></li><li><p><strong><code>git add your_large_file</code></strong>：</p><ul><li>这个命令将您要上传的大文件添加到暂存区。替换<code>your_large_file</code>为您的实际文件名。</li></ul></li><li><p><strong><code>git commit -m &quot;Add large file&quot;</code></strong>：</p><ul><li>这个命令创建一个新的提交，将您之前添加到暂存区的文件保存到版本历史中。<code>-m &quot;Add large file&quot;</code>是提交信息，您可以根据需要修改它来描述您所做的更改。</li></ul></li><li><p><strong><code>git push origin main</code></strong>：</p><ul><li>这个命令将您的本地提交推送到远程仓库（在这里是<code>origin</code>，通常指向您克隆的GitHub仓库）。<code>main</code>是您要推送的分支名称，确保使用正确的分支名（有些仓库可能使用<code>master</code>或其他分支名称）。</li></ul></li></ol><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p>这些步骤使您能够将大文件有效地上传到GitHub，并确保它们不会超过GitHub的文件大小限制。</p></div><h2 id="二、利用git-lfs-上传大文件简化步骤" tabindex="-1">二、利用git lfs 上传大文件简化步骤 <a class="header-anchor" href="#二、利用git-lfs-上传大文件简化步骤" aria-label="Permalink to &quot;二、利用git lfs 上传大文件简化步骤&quot;">​</a></h2><ol><li>安装git-lfs</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pkg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git-lfs</span></span></code></pre></div><ol start="2"><li>初始化</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lfs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><ol start="3"><li>查看git lfs版本</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lfs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre></div><ol start="4"><li>在根目录下创建一个名为<code>.gitattributes</code>的文件，里面包含了哪些文件类型应该使用LFS进行管理。这个命令将该文件添加到暂存区，以便在下次提交时包含它。</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .gitattributes</span></span></code></pre></div><ol start="5"><li>上传文件到暂存区,上传文件所在路径+文件全名包含后缀名。比如:<code>apk/百度输入法.apk</code></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apk/百度输入法.apk</span></span></code></pre></div><ol start="6"><li>创建一个新的提交，将您之前添加到暂存区的文件保存到版本历史中。<code>-m &quot;Add large file&quot;</code>是提交信息，您可以根据需要修改它来描述您所做的更改。</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Add 百度输入法.apk from apk&quot;</span></span></code></pre></div><ol start="7"><li>将更改推送到远程仓库</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span></span></code></pre></div><h2 id="三、多文件上传步骤" tabindex="-1">三、多文件上传步骤 <a class="header-anchor" href="#三、多文件上传步骤" aria-label="Permalink to &quot;三、多文件上传步骤&quot;">​</a></h2><ol><li><p><strong>使用Git LFS跟踪多种文件类型</strong>：</p><ul><li>如果您希望跟踪多种类型的大文件，可以在运行<code>git lfs track</code>时添加多个模式。例如：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lfs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> track</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;*.psd&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lfs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> track</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;*.zip&quot;</span></span></code></pre></div></li></ul></li><li><p><strong>添加所有大文件到暂存区</strong>：</p><ul><li>您可以一次性添加所有大文件。可以使用通配符来添加特定类型的文件，或者直接添加多个文件名。例如：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file1.psd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file2.zip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file3.mp4</span></span></code></pre></div></li><li>如果所有大文件都在同一目录下，您可以使用通配符，例如：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.psd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.zip</span></span></code></pre></div></li></ul></li><li><p><strong>提交更改</strong>：</p><ul><li>提交所有添加的文件：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Add multiple large files&quot;</span></span></code></pre></div></li></ul></li><li><p><strong>推送到远程仓库</strong>：</p><ul><li>最后，将更改推送到远程仓库：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span></code></pre></div></li></ul></li></ol><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p>通过这些步骤，您可以方便地将多个大文件一起上传到GitHub。确保在使用<code>git lfs track</code>时，您已经添加了所有需要管理的大文件类型。</p></div><p><strong>大文件上传到github仓库中显示一连串字符串。这段字符串是 Git LFS（Large File Storage）用来管理大文件的元数据。这段代码表示一个大文件的版本控制信息，包含以下几个部分：</strong></p><ul><li><code>version</code>：指明使用的 Git LFS 版本。</li><li><code>oid</code>：表示文件的唯一标识符（对象 ID），它是文件内容的 SHA256 哈希值。</li><li><code>size</code>：表示文件的大小（以字节为单位）。</li></ul><h2 id="四、下载特定-git-lfs-文件的步骤" tabindex="-1">四、下载特定 Git LFS 文件的步骤 <a class="header-anchor" href="#四、下载特定-git-lfs-文件的步骤" aria-label="Permalink to &quot;四、下载特定 Git LFS 文件的步骤&quot;">​</a></h2><ol><li><p><strong>确保安装了 Git LFS</strong>：</p><ul><li>确保您已经安装了 Git LFS。如果未安装，可以通过以下命令进行安装：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lfs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div></li></ul></li><li><p><strong>克隆或进入仓库</strong>：</p><ul><li>如果您尚未克隆仓库，请使用以下命令：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">repository-ur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></li><li>如果您已经有该仓库的本地副本，请使用 <code>cd</code> 命令进入仓库目录：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">repository-director</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></li></ul></li><li><p><strong>下载特定的 LFS 文件</strong>：</p><ul><li>如果您知道具体要下载的 LFS 文件的路径，可以使用 <code>git lfs fetch</code> 命令来获取该特定文件。例如：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lfs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fetch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --all</span></span></code></pre></div></li><li>这会下载所有 LFS 跟踪的文件，但不会将其替换到工作目录中。</li></ul></li><li><p><strong>使用 <code>git lfs checkout</code></strong>：</p><ul><li>之后，您可以使用 <code>git lfs checkout</code> 命令来替换特定文件：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lfs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">path/to/your-large-fil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></li></ul></li></ol><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h3><p>假设您要下载的文件名为 <code>largefile.apk</code>，并且它位于 <code>apk/</code> 子目录中，您可以执行以下命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lfs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fetch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --all</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lfs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apk/largefile.apk</span></span></code></pre></div><h3 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h3><ul><li>Git LFS 只会下载您指定的文件的实际内容，而不是整个仓库的所有大文件。</li><li>确保您有适当的权限访问这些 LFS 文件，并且它们在远程仓库中是可用的。</li></ul><p>通过以上步骤，您就可以成功下载特定的 Git LFS 管理的大文件。</p>`,33)),e(s)])}const b=a(n,[["render",d]]);export{u as __pageData,b as default};
